- name: postgresql.rules
  rules:
    - alert: PostgresExporter
      expr: sum(up{job=~".*postgres.*"}) by (job,instance) == 0
      for: 2m
      labels:
        severity: critical
      annotations:
        summary: "Job {{ $labels.job }} having an issue on {{ $labels.instance }}"
        description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 2 minutes."

    - alert: PostrgreSQLDown
      expr: sum(pg_up) by (instance,job) == 0
      for: 1m
      labels:
        severity: critical
      annotations:
        description: "{{ $labels.job }}/{{ $labels.instance }} cant be scraped, assume its down. Check if PGSQL is UP or user `prometheus` exists"
        summary: "{{ $labels.job }}/{{ $labels.instance }} cant be scraped"
    - alert: PostgreSQLMaxConnectionsReached
      expr: |
        sum by (instance,job) (pg_stat_activity_count) >=
        (sum by (instance,job) (pg_settings_max_connections)-
        sum by (instance,job) (pg_settings_superuser_reserved_connections))
      for: 1m
      labels:
        severity: critical
      annotations:
        description: "{{ $labels.instance }} is exceeding the currently configured maximum Postgres connection limit (current value: {{ $value }}). Services may be degraded - please take immediate action (you probably need to increase max_connections in the configuration)"
        summary: "{{ $labels.instance }} has maxed out Postgres connections."
    - alert: "PostgreSQLHighConnections"
      expr: |
        sum by (instance,job) (pg_stat_activity_count) >
        (
          sum by (instance,job) (pg_settings_max_connections)
          -
          sum by (instance,job) (pg_settings_superuser_reserved_connections)
        ) * 0.8
      for: 5m
      labels:
        severity: warning
      annotations:
        description: "{{ $labels.instance }} is exceeding 80% of the currently configured maximum PostgreSQL connection limit (current value: {{ $value }}s). Please check utilization graphs and confirm if this is normal service growth, abuse or an otherwise temporary condition or if new resources need to be provisioned (or the limits increased, which is mostly likely)."
        summary: "{{ $labels.instance }} is over 80% of max Postgres connections."
    - alert: PostgreSQLSlowQueries
      expr: |
        avg by (datname,instance) (
          rate (
            pg_stat_activity_max_tx_duration{datname!~"template.*"}[2m]
          )
        ) > 10
      for: 5m
      labels:
        severity: warning
      annotations:
        description: "PostgreSQL high number of slow queries {{ $labels.instance }} for database {{ $labels.datname }} with a value of {{ $value }} "
        summary: "PostgreSQL high number of slow on {{ $labels.instance }} for database {{ $labels.datname }} "
        utility: garbage
    - alert: PostgreSQLSlowQueries
      expr: |
        avg by (datname,instance) (
          rate (
            pg_stat_activity_max_tx_duration{datname!~"template.*"}[2m]
          )
        ) > 10
      for: 5m
      labels:
        severity: warning
      annotations:
        description: "PostgreSQL high number of slow queries {{ $labels.instance }} for database {{ $labels.datname }} with a value of {{ $value }} "
        summary: "PostgreSQL high number of slow on {{ $labels.instance }} for database {{ $labels.datname }} "
        utility: garbage
    - alert: PostgreSQLHighQPS
      expr: |
        avg by (datname,instance) (
          irate(
            pg_stat_database_xact_commit{datname!~"template.*"}[5m]
          )
          +
          irate(
            pg_stat_database_xact_rollback{datname!~"template.*"}[5m]
          )
        ) > 10000
      for: 5m
      labels:
        severity: warning
      annotations:
        description: "PostgreSQL high number of queries per second on {{ $labels.datname }}/{{ $labels.instance }} for database {{ $labels.datname }} with a value of {{ $value }}"
        summary: "PostgreSQL high number of queries per second {{ $labels.datname }}/{{ $labels.instance }} for database {{ $labels.datname }}"
        utility: garbage
    - alert: PostgreSQLHighQPS
      expr: |
        avg by (datname,instance) (
          irate(
            pg_stat_database_xact_commit{datname!~"template.*"}[5m]
          )
          +
          irate(
            pg_stat_database_xact_rollback{datname!~"template.*"}[5m]
          )
        ) > 8000
      for: 5m
      labels:
        severity: critical
      annotations:
        description: "PostgreSQL high number of queries per second on {{ $labels.instance }} for database {{ $labels.datname }} with a value of {{ $value }}"
        summary: "PostgreSQL high number of queries per second {{ $labels.instance }} for database {{ $labels.datname }}"
        utility: garbage
    - alert: PostgreSQLRepliDown
      expr: sum(pg_replication_slots_active) by (instance,job,slot_name) < 1
      for: 5m
      labels:
        severity: critical
      annotations:
        description: "PostgreSQL replication down for {{ $labels.instance }} / {{ $labels.slot_name}} "
        summary: "PostgreSQL replication down for {{ $labels.instance }} / {{ $labels.slot_name}} "
    - alert: PostgreSQLRepliLag
      expr: sum(replication_lag) by (instance,job) > 10
      for: 10m
      labels:
        severity: info
        utility: garbage
      annotations:
        description: "PostgreSQL replication is high (> 10s) for 10 minuts on {{ $labels.instance }}"
        summary: "PostgreSQL replication high for {{ $labels.instance }}"
    - alert: PostgreSQLRepliLag
      expr: sum(replication_lag) by (instance,job) > 10
      for: 40m
      labels:
        severity: critical
      annotations:
        description: "PostgreSQL replication is high (> 10s) for 10 minuts on {{ $labels.instance }}"
        summary: "PostgreSQL replication high for {{ $labels.instance }}"

